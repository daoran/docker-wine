#!/usr/bin/env bash

is_enabled () {
    echo "$1" | grep -q -i -E "^(yes|on|true|1)$"
}

is_disabled () {
    echo "$1" | grep -q -i -E "^(no|off|false|0)$"
}

get_hrefs () {
    local url="$1"
    local regexp="$2"
    local download_cmd

    if command -v wget >/dev/null 2>&1; then
        download_cmd="wget -q -O-"
    elif command -v curl >/dev/null 2>&1; then
        download_cmd="curl -s -o-"
    else
        echo "ERROR: Install wget or curl to continue."
        exit 1
    fi

    $download_cmd "${url}" | sed -E "s/></>\n</g" | sed -n -E "s|^.*<a href=\"(${regexp})\">.*|\1|p" | uniq
}

get_wine_version () {
    local branch="$1"
    local major_version="$2"

    local id="debian"
    local dist="bookworm"
    local url="https://dl.winehq.org/wine-builds/${id}/dists/${dist}/main/binary-amd64/"

    local version
    if [ "${major_version}" = "latest" ]; then
        version="$(get_hrefs "${url}" "wine-${branch}_.*\.deb" | sed -n -E "s/^wine-${branch}_([0-9]+(\.[0-9]+)*).*$/\1/p" | sort -rV | head -1)"
    else
        version="$(get_hrefs "${url}" "wine-${branch}_.*\.deb" | sed -n -E "s/^wine-${branch}_([0-9]+(\.[0-9]+)*).*$/\1/p" | grep -E "^${major_version}" | sort -rV | head -1)"
    fi

    echo "${version}"
}

BUILD_CMD="docker build"
BASE_IMAGE="${BASE_IMAGE:-scottyhardy/docker-remote-desktop}"
TAG="${TAG:-latest}"
WINE_BRANCH="${WINE_BRANCH:-stable}"
WINE_VERSION="${WINE_VERSION:-}"
WINE_MAJOR_VERSION="${WINE_MAJOR_VERSION:-8}"
REPO="${DOCKER_REPO:-docker-wine}"
REPO_TAG="${REPO_TAG:-latest}"

if [ -z "${WINE_VERSION}" ]; then
    WINE_VERSION=$(get_wine_version "${WINE_BRANCH}" "${WINE_MAJOR_VERSION}")
elif [ "${WINE_VERSION}" = "latest" ]; then
    WINE_VERSION=$(get_wine_version "${WINE_BRANCH}" "latest")
fi

if ! docker system info >/dev/null 2>&1; then
    if buildah -v >/dev/null 2>&1; then
        BUILD_CMD="buildah bud"
    else
        echo "ERROR: Docker daemon is not running. Check if the Docker service is active."
        exit 1
    fi
fi

echo "Building wine-${WINE_BRANCH} ${WINE_VERSION} . . ."

${BUILD_CMD} "$@" \
    --build-arg="BASE_IMAGE=${BASE_IMAGE}" \
    --build-arg="TAG=${TAG}" \
    --build-arg="WINE_BRANCH=${WINE_BRANCH}" \
    --build-arg="WINE_VERSION=${WINE_VERSION}" \
    -t "${REPO}:${REPO_TAG}" .
